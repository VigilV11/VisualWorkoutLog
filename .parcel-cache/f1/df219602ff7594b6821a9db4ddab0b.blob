var _leaflet = require('leaflet');
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
var _leafletDefault = _parcelHelpers.interopDefault(_leaflet);
require('core-js/stable');
require('regenerator-runtime/runtime');
var _constantsJs = require('./constants.js');
// import {
// mapAPIOpenStreetMap as mapAPI,
// mapAttributionOpenStreetMap as mapAttribution,
// } from './constants.js';
// ++++++++++++++++ PROMISIFYING GEOLOCATION API CALL ++++++++++++++++\\
const getPosition = function () {
  return new Promise((resolve, reject) => navigator.geolocation.getCurrentPosition(resolve, reject));
};
// ++++++++++++++++ DISPLAY MAP TO CURRENT POSITION ++++++++++++++++\\
const loadMap = async function () {
  const res = await getPosition();
  const lat = res.coords.latitude;
  const lng = res.coords.longitude;
  let mapObj = _leafletDefault.default.map('map').setView([lat, lng], 13);
  // second parameter is the map zoom level
  _leafletDefault.default.tileLayer(_constantsJs.mapAPIMapbox, _constantsJs.mapAttributionMapbox).addTo(mapObj);
  return mapObj;
};
// ++++++++++++++++ GET LOCATION DATA ++++++++++++++++\\
const getLocationData = async function (lat, lng) {
  const res = await fetch(`https://us1.locationiq.com/v1/reverse.php?key=pk.7015a6ffafc03ce7858abff0d71bf1cf&format=json&lat=${lat}&lon=${lng}`);
  const data = await res.json();
  return data.display_name;
};
// ++++++++++++++++ GET USER CLICK LOCATION ++++++++++++++++\\
const getMapLocation = async function () {
  const myMap = await loadMap();
  myMap.on('click', onMapClick.bind(myMap));
};
async function onMapClick(e) {
  const myMap = this;
  const {latlng: {lat, lng}} = e;
  const location = await getLocationData(lat, lng);
  let locStr = location.split(',');
  console.log(locStr);
  const mainLoc = locStr[0];
  console.log(mainLoc);
  locStr.shift();
  console.log(locStr);
  const newLoc = locStr.join(', ');
  var marker = _leafletDefault.default.marker([lat, lng]).addTo(myMap);
  marker.bindPopup(`<strong>${mainLoc}</strong> < /br> ${newLoc}`).openPopup();
}
getMapLocation();
